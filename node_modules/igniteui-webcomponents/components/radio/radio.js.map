{"version":3,"file":"radio.js","sourceRoot":"","sources":["../../../src/components/radio/radio.ts"],"names":[],"mappings":";;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAC/E,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AACzD,OAAO,EAAE,IAAI,EAAE,MAAM,wBAAwB,CAAC;AAE9C,OAAO,EAAE,MAAM,EAAE,MAAM,4BAA4B,CAAC;AACpD,OAAO,EAAE,GAAG,EAAE,MAAM,oBAAoB,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,MAAM,EAAE,MAAM,oCAAoC,CAAC;AAC5D,OAAO,EACL,cAAc,EACd,SAAS,EACT,SAAS,EACT,UAAU,EACV,OAAO,GACR,MAAM,uCAAuC,CAAC;AAC/C,OAAO,EAAE,aAAa,EAAE,MAAM,uCAAuC,CAAC;AACtE,OAAO,EAAE,gBAAgB,EAAE,MAAM,0CAA0C,CAAC;AAC5E,OAAO,EAAE,KAAK,EAAE,MAAM,+BAA+B,CAAC;AACtD,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AACtE,OAAO,QAAQ,MAAM,yCAAyC,CAAC;AAE/D,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AACtE,OAAO,EAAE,2BAA2B,EAAE,MAAM,8CAA8C,CAAC;AAC3F,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AAuB7D,IAAM,iBAAiB,yBAAvB,MAAM,iBAAkB,SAAQ,2BAA2B,CACxE,iBAAiB,CAA4C,UAAU,CAAC,CACzE;IAIQ,MAAM,CAAC,QAAQ;QACpB,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAmCD,IAAY,KAAK;QACf,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IAEkB,eAAe;QAChC,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAI,YAAY,IAAI,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;YACjD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;aAAM;YACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;IACH,CAAC;IAwBD;QACE,KAAK,EAAE,CAAC;QAnES,eAAU,GAAsB;YACjD;gBACE,GAAG,EAAE,cAAc;gBACnB,OAAO,EAAE,QAAQ,CAAC,QAAQ;gBAC1B,OAAO,EAAE,GAAG,EAAE;oBACZ,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;oBACvC,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC;wBAC3C,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC;wBACpB,CAAC,CAAC,IAAI,CAAC;gBACX,CAAC;aACF;SACF,CAAC;QAEM,YAAO,GAAG,SAAS,mBAAiB,CAAC,SAAS,EAAE,EAAE,CAAC;QACnD,YAAO,GAAG,eAAe,IAAI,CAAC,OAAO,EAAE,CAAC;QASxC,cAAS,GAAG,CAAC,CAAC;QAGd,YAAO,GAAG,KAAK,CAAC;QAGd,cAAS,GAAG,KAAK,CAAC;QA4BrB,YAAO,GAAG,KAAK,CAAC;QAOhB,kBAAa,GAAuB,OAAO,CAAC;QAIjD,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAEjD,cAAc,CAAC,IAAI,EAAE;YACnB,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ;YACzB,eAAe,EAAE,EAAE,cAAc,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,eAAe,CAAC,EAAE;SACvE,CAAC;aACC,GAAG,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACzD,GAAG,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC1D,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;aACrC,GAAG,CAAC,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC;IAGe,KAAK;QACnB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IACrB,CAAC;IAIe,KAAK,CAAC,OAAsB;QAC1C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC5B,CAAC;IAIe,IAAI;QAClB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;IAMe,iBAAiB,CAAC,OAAe;QAC/C,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAE9B,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YAC1B,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YAC9B,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;IACH,CAAC;IAGkB,cAAc;QAC/B,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAE9B,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YAC1B,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;IACH,CAAC;IAEO,mBAAmB;QACzB,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAEhC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC;QAEpB,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE;YAC5B,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;YACtB,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;YACrB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;IACH,CAAC;IAEO,qBAAqB;QAC3B,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAEhC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;SACrB;QAED,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE;YAC5B,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;IACH,CAAC;IAGS,cAAc;QACtB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC3E,CAAC;IAES,eAAe,CAAC,KAAmB;QAC3C,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAES,WAAW;QACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;IAES,UAAU;QAClB,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACvB,CAAC;IAES,WAAW;QACnB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAC7B,CAAC;IAES,WAAW;QACnB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;IACH,CAAC;IAES,QAAQ,CAAC,GAAW;QAC5B,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9B,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACvE,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;QAE9B,KAAK,CAAC,KAAK,EAAE,CAAC;QACd,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC;QACrB,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAES,gBAAgB;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IACzC,CAAC;IAEkB,MAAM;QACvB,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC;QAExD,OAAO,IAAI,CAAA;;eAEA,WAAW,CAAC;YACjB,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC;cACI,IAAI,CAAC,OAAO;uBACH,IAAI,CAAC,eAAe;;;eAG5B,IAAI,CAAC,OAAO;;iBAEV,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;kBACnB,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;sBACjB,IAAI,CAAC,QAAQ;sBACb,IAAI,CAAC,QAAQ;qBACd,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;qBAClB,IAAI,CAAC,SAAS;yBACV,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO;0BAC9B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO;4BAC9B,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO;mBAC/C,IAAI,CAAC,WAAW;kBACjB,IAAI,CAAC,UAAU;mBACd,IAAI,CAAC,WAAW;;qBAEd,WAAW,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;;sBAEpD,IAAI,CAAC,QAAQ;mBAChB,WAAW,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;;;;oBAInD,IAAI,CAAC,SAAS;iBACjB,WAAW,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC;eACrD,IAAI,CAAC,OAAO;;8BAEG,IAAI,CAAC,gBAAgB;;;KAG9C,CAAC;IACJ,CAAC;;AA5PsB,yBAAO,GAAG,WAAW,AAAd,CAAe;AAC5B,wBAAM,GAAG,MAAM,AAAT,CAAU;AAMT,2BAAS,GAAG,aAAa,EAAE,AAAlB,CAAmB;AAmB1C;IADT,KAAK,CAAC,qBAAqB,CAAC;gDACM;AAGzB;IADT,kBAAkB,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;gDACR;AAGtB;IADP,KAAK,EAAE;oDACc;AAGd;IADP,KAAK,EAAE;kDACgB;AAGd;IADT,KAAK,EAAE;oDACoB;AAoBrB;IADN,QAAQ,EAAE;gDACW;AAQf;IAFN,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;IAC3B,gBAAgB,CAAC,WAAW,EAAE,QAAQ,CAAC;kDACjB;AAOhB;IADN,QAAQ,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;wDACN;AAuBnC;IADf,aAAa,CAAC,gBAAgB,CAAC;8CAG/B;AAIe;IADf,aAAa,CAAC,eAAe,CAAC;6CAG9B;AAgBkB;IADlB,KAAK,CAAC,UAAU,EAAE,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC;uDAQjD;AAqCS;IADT,KAAK,CAAC,SAAS,CAAC;uDAGhB;AAzKkB,iBAAiB;IADrC,MAAM,CAAC,GAAG,CAAC;GACS,iBAAiB,CAgQrC;eAhQoB,iBAAiB","sourcesContent":["import { LitElement, html } from 'lit';\nimport { property, query, queryAssignedNodes, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { live } from 'lit/directives/live.js';\n\nimport { styles } from './themes/radio.base.css.js';\nimport { all } from './themes/themes.js';\nimport { getGroup } from './utils.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport {\n  addKeybindings,\n  arrowDown,\n  arrowLeft,\n  arrowRight,\n  arrowUp,\n} from '../common/controllers/key-bindings.js';\nimport { alternateName } from '../common/decorators/alternateName.js';\nimport { blazorTwoWayBind } from '../common/decorators/blazorTwoWayBind.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { registerComponent } from '../common/definitions/register.js';\nimport messages from '../common/localization/validation-en.js';\nimport { Constructor } from '../common/mixins/constructor.js';\nimport { EventEmitterMixin } from '../common/mixins/event-emitter.js';\nimport { FormAssociatedRequiredMixin } from '../common/mixins/form-associated-required.js';\nimport { createCounter, isLTR, partNameMap, wrap } from '../common/util.js';\nimport { Validator } from '../common/validators.js';\n\nexport interface IgcRadioEventMap {\n  igcChange: CustomEvent<boolean>;\n  igcFocus: CustomEvent<void>;\n  igcBlur: CustomEvent<void>;\n}\n\n/**\n * @element igc-radio\n *\n * @slot - The radio label.\n *\n * @fires igcChange - Emitted when the control's checked state changes.\n * @fires igcFocus - Emitted when the control gains focus.\n * @fires igcBlur - Emitted when the control loses focus.\n *\n * @csspart base - The radio control base wrapper.\n * @csspart control - The radio control.\n * @csspart label - The radio control label.\n */\n@themes(all)\nexport default class IgcRadioComponent extends FormAssociatedRequiredMixin(\n  EventEmitterMixin<IgcRadioEventMap, Constructor<LitElement>>(LitElement)\n) {\n  public static readonly tagName = 'igc-radio';\n  protected static styles = styles;\n\n  public static register() {\n    registerComponent(this);\n  }\n\n  private static readonly increment = createCounter();\n\n  protected override validators: Validator<this>[] = [\n    {\n      key: 'valueMissing',\n      message: messages.required,\n      isValid: () => {\n        const { radios, checked } = this.group;\n        return radios.some((radio) => radio.required)\n          ? checked.length > 0\n          : true;\n      },\n    },\n  ];\n\n  private inputId = `radio-${IgcRadioComponent.increment()}`;\n  private labelId = `radio-label-${this.inputId}`;\n\n  @query('input[type=\"radio\"]')\n  protected input!: HTMLInputElement;\n\n  @queryAssignedNodes({ flatten: true })\n  protected label!: Array<Node>;\n\n  @state()\n  private _tabIndex = 0;\n\n  @state()\n  private focused = false;\n\n  @state()\n  protected hideLabel = false;\n\n  private get group() {\n    return getGroup(this);\n  }\n\n  protected override setDefaultValue(): void {\n    const firstChecked = this.group.checked[0];\n    if (firstChecked && firstChecked.isSameNode(this)) {\n      this._defaultValue = true;\n    } else {\n      this._defaultValue = false;\n    }\n  }\n\n  /**\n   * The value attribute of the control.\n   * @attr\n   */\n  @property()\n  public value!: string;\n\n  /**\n   * The checked state of the control.\n   * @attr\n   */\n  @property({ type: Boolean })\n  @blazorTwoWayBind('igcChange', 'detail')\n  public checked = false;\n\n  /**\n   * The label position of the radio control.\n   * @attr label-position\n   */\n  @property({ reflect: true, attribute: 'label-position' })\n  public labelPosition: 'before' | 'after' = 'after';\n\n  constructor() {\n    super();\n    this.addEventListener('keyup', this.handleKeyUp);\n\n    addKeybindings(this, {\n      skip: () => this.disabled,\n      bindingDefaults: { preventDefault: true, triggers: ['keydownRepeat'] },\n    })\n      .set(arrowLeft, () => this.navigate(isLTR(this) ? -1 : 1))\n      .set(arrowRight, () => this.navigate(isLTR(this) ? 1 : -1))\n      .set(arrowUp, () => this.navigate(-1))\n      .set(arrowDown, () => this.navigate(1));\n  }\n\n  /** Simulates a click on the radio control. */\n  public override click() {\n    this.input.click();\n  }\n\n  /** Sets focus on the radio control. */\n  @alternateName('focusComponent')\n  public override focus(options?: FocusOptions) {\n    this.input.focus(options);\n  }\n\n  /** Removes focus from the radio control. */\n  @alternateName('blurComponent')\n  public override blur() {\n    this.input.blur();\n  }\n\n  /**\n   * Sets a custom validation message for the control.\n   * As long as `message` is not empty, the control is considered invalid.\n   */\n  public override setCustomValidity(message: string): void {\n    const { radios } = this.group;\n\n    for (const radio of radios) {\n      radio.updateValidity(message);\n      radio.setInvalidState();\n    }\n  }\n\n  @watch('required', { waitUntilFirstUpdate: true })\n  protected override requiredChange(): void {\n    const { radios } = this.group;\n\n    for (const radio of radios) {\n      radio.updateValidity();\n      radio.setInvalidState();\n    }\n  }\n\n  private _updateCheckedState() {\n    const { siblings } = this.group;\n\n    this.setFormValue(this.value || 'on');\n    this.updateValidity();\n    this.setInvalidState();\n\n    this._tabIndex = 0;\n    this.input?.focus();\n\n    for (const radio of siblings) {\n      radio.checked = false;\n      radio._tabIndex = -1;\n      radio.updateValidity();\n      radio.setInvalidState();\n    }\n  }\n\n  private _updateUncheckedState() {\n    const { siblings } = this.group;\n\n    this.setFormValue(null);\n    this.updateValidity();\n    this.setInvalidState();\n\n    if (this.hasUpdated) {\n      this._tabIndex = -1;\n    }\n\n    for (const radio of siblings) {\n      radio.updateValidity();\n    }\n  }\n\n  @watch('checked')\n  protected checkedChanged() {\n    this.checked ? this._updateCheckedState() : this._updateUncheckedState();\n  }\n\n  protected handleMouseDown(event: PointerEvent) {\n    event.preventDefault();\n    this.input.focus();\n    this.focused = false;\n  }\n\n  protected handleClick() {\n    this.checked = true;\n    this.emitEvent('igcChange', { detail: this.checked });\n  }\n\n  protected handleBlur() {\n    this.emitEvent('igcBlur');\n    this.focused = false;\n  }\n\n  protected handleFocus() {\n    this.emitEvent('igcFocus');\n  }\n\n  protected handleKeyUp() {\n    if (!this.focused) {\n      this.focused = true;\n    }\n  }\n\n  protected navigate(idx: number) {\n    const { active } = this.group;\n    const nextIdx = wrap(0, active.length - 1, active.indexOf(this) + idx);\n    const radio = active[nextIdx];\n\n    radio.focus();\n    radio.checked = true;\n    radio.emitEvent('igcChange', { detail: radio.checked });\n  }\n\n  protected handleSlotChange() {\n    this.hideLabel = this.label.length < 1;\n  }\n\n  protected override render() {\n    const labelledBy = this.getAttribute('aria-labelledby');\n\n    return html`\n      <label\n        part=${partNameMap({\n          base: true,\n          checked: this.checked,\n          focused: this.focused,\n        })}\n        for=${this.inputId}\n        @pointerdown=${this.handleMouseDown}\n      >\n        <input\n          id=${this.inputId}\n          type=\"radio\"\n          name=${ifDefined(this.name)}\n          value=${ifDefined(this.value)}\n          .required=${this.required}\n          .disabled=${this.disabled}\n          .checked=${live(this.checked)}\n          tabindex=${this._tabIndex}\n          aria-checked=${this.checked ? 'true' : 'false'}\n          aria-disabled=${this.disabled ? 'true' : 'false'}\n          aria-labelledby=${labelledBy ? labelledBy : this.labelId}\n          @click=${this.handleClick}\n          @blur=${this.handleBlur}\n          @focus=${this.handleFocus}\n        />\n        <span part=${partNameMap({ control: true, checked: this.checked })}>\n          <span\n            .hidden=${this.disabled}\n            part=${partNameMap({ ripple: true, checked: this.checked })}\n          ></span>\n        </span>\n        <span\n          .hidden=${this.hideLabel}\n          part=${partNameMap({ label: true, checked: this.checked })}\n          id=${this.labelId}\n        >\n          <slot @slotchange=${this.handleSlotChange}></slot>\n        </span>\n      </label>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'igc-radio': IgcRadioComponent;\n  }\n}\n"]}