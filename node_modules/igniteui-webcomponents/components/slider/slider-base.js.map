{"version":3,"file":"slider-base.js","sourceRoot":"","sources":["../../../src/components/slider/slider-base.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement, TemplateResult, html } from 'lit';\nimport {\n  property,\n  query,\n  queryAssignedElements,\n  state,\n} from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { StyleInfo, styleMap } from 'lit/directives/style-map.js';\n\nimport { styles } from './themes/slider.base.css.js';\nimport { all } from './themes/themes.js';\nimport { themes } from '../../theming/theming-decorator.js';\nimport {\n  addKeybindings,\n  arrowDown,\n  arrowLeft,\n  arrowRight,\n  arrowUp,\n  endKey,\n  homeKey,\n  pageDownKey,\n  pageUpKey,\n} from '../common/controllers/key-bindings.js';\nimport { blazorDeepImport } from '../common/decorators/blazorDeepImport.js';\nimport { blazorTypeOverride } from '../common/decorators/blazorTypeOverride.js';\nimport { watch } from '../common/decorators/watch.js';\nimport { isLTR } from '../common/util.js';\n\n@themes(all, true)\n@blazorDeepImport\nexport class IgcSliderBaseComponent extends LitElement {\n  public static override styles = styles;\n\n  @query(`[part~='thumb']`)\n  protected thumb!: HTMLElement;\n\n  @queryAssignedElements({ selector: 'igc-slider-label' })\n  private labelElements!: HTMLElement[];\n\n  private _lowerBound?: number;\n  private _upperBound?: number;\n  private _min = 0;\n  private _max = 100;\n  private _step = 1;\n  private startValue?: number;\n  private pointerCaptured = false;\n  private thumbHoverTimer: any;\n  protected activeThumb?: HTMLElement;\n\n  @state()\n  protected thumbLabelsVisible = false;\n\n  @state()\n  protected labels?: string[];\n\n  public set min(value: number) {\n    if (value < this.max) {\n      const oldVal = this._min;\n      this._min = this.labels ? 0 : value;\n      this.requestUpdate('min', oldVal);\n\n      if (typeof this.lowerBound === 'number' && this.lowerBound < value) {\n        this.lowerBound = value;\n      }\n    }\n  }\n\n  /**\n   * The minimum value of the slider scale. Defaults to 0.\n   * @attr\n   */\n  @property({ type: Number })\n  public get min(): number {\n    return this._min;\n  }\n\n  public set max(value: number) {\n    if (value > this.min) {\n      const oldVal = this._max;\n      this._max = this.labels ? this.labels.length - 1 : value;\n      this.requestUpdate('max', oldVal);\n\n      if (typeof this.upperBound === 'number' && this.upperBound > value) {\n        this.upperBound = value;\n      }\n    }\n  }\n\n  /**\n   * The maximum value of the slider scale. Defaults to 100.\n   * @attr\n   */\n  @property({ type: Number })\n  public get max(): number {\n    return this._max;\n  }\n\n  public set lowerBound(value: number | undefined) {\n    const oldVal = this._lowerBound;\n\n    if (typeof value === 'number') {\n      this._lowerBound = this.valueInRange(value, this.min, this.actualMax);\n    } else {\n      this._lowerBound = value;\n    }\n    this.requestUpdate('lowerBound', oldVal);\n  }\n\n  /**\n   * The lower bound of the slider value. If not set, the `min` value is applied.\n   * @attr lower-bound\n   */\n  @property({ type: Number, attribute: 'lower-bound' })\n  public get lowerBound(): number | undefined {\n    return this._lowerBound;\n  }\n\n  public set upperBound(value: number | undefined) {\n    const oldVal = this._upperBound;\n\n    if (typeof value === 'number') {\n      this._upperBound = this.valueInRange(value, this.actualMin, this.max);\n    } else {\n      this._upperBound = value;\n    }\n    this.requestUpdate('upperBound', oldVal);\n  }\n\n  /**\n   * The upper bound of the slider value. If not set, the `max` value is applied.\n   * @attr upper-bound\n   */\n  @property({ type: Number, attribute: 'upper-bound' })\n  public get upperBound(): number | undefined {\n    return this._upperBound;\n  }\n\n  /**\n   * Disables the UI interactions of the slider.\n   * @attr\n   */\n  @property({ type: Boolean, reflect: true })\n  public disabled = false;\n\n  /**\n   * Marks the slider track as discrete so it displays the steps.\n   * If the `step` is 0, the slider will remain continuos even if `discreteTrack` is `true`.\n   * @attr discrete-track\n   */\n  @property({ type: Boolean, attribute: 'discrete-track' })\n  public discreteTrack = false;\n\n  /**\n   * Hides the thumb tooltip.\n   * @attr hide-tooltip\n   */\n  @property({ type: Boolean, attribute: 'hide-tooltip' })\n  public hideTooltip = false;\n\n  public set step(value: number) {\n    const oldVal = this._step;\n    this._step = this.labels ? 1 : value;\n    this.requestUpdate('step', oldVal);\n  }\n\n  /**\n   * Specifies the granularity that the value must adhere to.\n   * If set to 0 no stepping is implied and any value in the range is allowed.\n   * @attr\n   */\n  @property({ type: Number })\n  public get step(): number {\n    return this._step;\n  }\n\n  /**\n   * The number of primary ticks. It defaults to 0 which means no primary ticks are displayed.\n   * @attr primary-ticks\n   */\n  @property({ type: Number, attribute: 'primary-ticks' })\n  public primaryTicks = 0;\n\n  /**\n   * The number of secondary ticks. It defaults to 0 which means no secondary ticks are displayed.\n   * @attr secondary-ticks\n   */\n  @property({ type: Number, attribute: 'secondary-ticks' })\n  public secondaryTicks = 0;\n\n  /**\n   * Changes the orientation of the ticks.\n   * @attr tick-orientation\n   */\n  @property({ attribute: 'tick-orientation' })\n  public tickOrientation: 'mirror' | 'start' | 'end' = 'end';\n\n  /**\n   * Hides the primary tick labels.\n   * @attr hide-primary-labels\n   */\n  @property({ type: Boolean, attribute: 'hide-primary-labels' })\n  public hidePrimaryLabels = false;\n\n  /**\n   * Hides the secondary tick labels.\n   * @attr hide-secondary-labels\n   */\n  @property({ type: Boolean, attribute: 'hide-secondary-labels' })\n  public hideSecondaryLabels = false;\n\n  /**\n   * The locale used to format the thumb and tick label values in the slider.\n   * @attr\n   */\n  @property()\n  public locale = 'en';\n\n  /**\n   * String format used for the thumb and tick label values in the slider.\n   * @attr value-format\n   */\n  @property({ attribute: 'value-format' })\n  public valueFormat?: string;\n\n  /**\n   * Number format options used for the thumb and tick label values in the slider.\n   */\n  /* blazorSuppress */\n  @property({ attribute: false })\n  public valueFormatOptions?: Intl.NumberFormatOptions;\n\n  /**\n   * The degrees for the rotation of the tick labels. Defaults to 0.\n   * @attr tick-label-rotation\n   */\n  @property({ type: Number, reflect: true, attribute: 'tick-label-rotation' })\n  @blazorTypeOverride('TickLabelRotation', true)\n  public tickLabelRotation: 0 | 90 | -90 = 0;\n\n  @watch('min', { waitUntilFirstUpdate: true })\n  @watch('max', { waitUntilFirstUpdate: true })\n  @watch('lowerBound', { waitUntilFirstUpdate: true })\n  @watch('upperBound', { waitUntilFirstUpdate: true })\n  @watch('step', { waitUntilFirstUpdate: true })\n  protected constraintsChange() {\n    this.normalizeValue();\n  }\n\n  @watch('labels')\n  protected labelsChange() {\n    if (this.labels) {\n      this.min = 0;\n      this.max = this.labels.length - 1;\n      this.step = 1;\n    }\n  }\n\n  constructor() {\n    super();\n    this.addEventListener('pointerdown', this.pointerDown);\n    this.addEventListener('pointermove', this.pointerMove);\n    this.addEventListener('lostpointercapture', this.lostPointerCapture);\n    this.addEventListener('keyup', this.handleKeyUp);\n\n    addKeybindings(this, {\n      skip: () => this.disabled,\n      bindingDefaults: { preventDefault: true },\n    })\n      .set(arrowLeft, () => this.handleArrowKeys(isLTR(this) ? -1 : 1))\n      .set(arrowRight, () => this.handleArrowKeys(isLTR(this) ? 1 : -1))\n      .set(arrowUp, () => this.handleArrowKeys(1))\n      .set(arrowDown, () => this.handleArrowKeys(-1))\n      .set(homeKey, () =>\n        this.handleKeyboardIncrement(this.actualMin - this.activeValue)\n      )\n      .set(endKey, () =>\n        this.handleKeyboardIncrement(this.actualMax - this.activeValue)\n      )\n      .set(pageUpKey, () => this.handlePageKeys(1))\n      .set(pageDownKey, () => this.handlePageKeys(-1));\n  }\n\n  private handleArrowKeys(delta: -1 | 1) {\n    const step = this.step ? this.step : 1;\n    this.handleKeyboardIncrement(step * delta);\n  }\n\n  private handlePageKeys(delta: -1 | 1) {\n    const step = this.step ? this.step : 1;\n    this.handleKeyboardIncrement(\n      delta * Math.max((this.actualMax - this.actualMin) / 10, step)\n    );\n  }\n\n  private handleKeyboardIncrement(increment: number) {\n    if (increment) {\n      const updated = this.updateValue(increment);\n      this.showThumbLabels();\n      this.hideThumbLabels();\n\n      if (updated) {\n        this.emitChangeEvent();\n      }\n    }\n  }\n\n  public override connectedCallback() {\n    super.connectedCallback();\n    this.normalizeValue();\n  }\n\n  protected handleKeyUp() {\n    this.activeThumb?.part.add('focused');\n  }\n\n  protected handleSlotChange() {\n    this.labels =\n      this.labelElements && this.labelElements.length\n        ? this.labelElements.map((e) => e.textContent as string)\n        : undefined;\n  }\n\n  /* c8 ignore next 3 */\n  protected get activeValue() {\n    return 0;\n  }\n\n  /* c8 ignore next */\n  protected normalizeValue(): void {}\n\n  /* c8 ignore next 3 */\n  protected getTrackStyle(): StyleInfo {\n    return {};\n  }\n\n  /* c8 ignore next 3 */\n  protected updateValue(_increment: number): boolean {\n    return false;\n  }\n\n  /* c8 ignore next 3 */\n  protected renderThumbs(): TemplateResult<1> {\n    return html``;\n  }\n\n  /* c8 ignore next */\n  protected emitInputEvent() {}\n\n  /* c8 ignore next */\n  protected emitChangeEvent() {}\n\n  protected get actualMin(): number {\n    return typeof this.lowerBound === 'number'\n      ? (this.lowerBound as number)\n      : this.min;\n  }\n\n  protected get actualMax(): number {\n    return typeof this.upperBound === 'number'\n      ? (this.upperBound as number)\n      : this.max;\n  }\n\n  protected validateValue(value: number) {\n    value = this.valueInRange(value, this.actualMin, this.actualMax);\n    value = this.normalizeByStep(value);\n\n    return value;\n  }\n\n  protected formatValue(value: number) {\n    return this.valueFormat\n      ? this.valueFormat.replace(\n          '{0}',\n          value.toLocaleString(this.locale, this.valueFormatOptions)\n        )\n      : value.toLocaleString(this.locale, this.valueFormatOptions);\n  }\n\n  private normalizeByStep(value: number) {\n    return this.step ? value - ((value - this.actualMin) % this.step) : value;\n  }\n\n  protected closestHandle(_event: PointerEvent): HTMLElement {\n    return this.thumb;\n  }\n\n  private totalTickCount() {\n    const primaryTicks = this.labels\n      ? this.primaryTicks > 0\n        ? this.labels.length\n        : 0\n      : this.primaryTicks === 1\n        ? 2\n        : this.primaryTicks;\n\n    return primaryTicks > 0\n      ? (primaryTicks - 1) * this.secondaryTicks + primaryTicks\n      : this.secondaryTicks > 0\n        ? this.secondaryTicks\n        : 0;\n  }\n\n  private tickValue(idx: number) {\n    const tickCount = this.totalTickCount();\n    const labelStep =\n      tickCount > 1\n        ? (this.max - this.min) / (tickCount - 1)\n        : this.max - this.min;\n    const labelVal = labelStep * idx;\n\n    return this.min + labelVal;\n  }\n\n  private isPrimary(idx: number) {\n    return this.primaryTicks <= 0\n      ? false\n      : idx % (this.secondaryTicks + 1) === 0;\n  }\n\n  private showThumbLabels() {\n    if (this.disabled || this.hideTooltip) {\n      return;\n    }\n\n    if (this.thumbHoverTimer) {\n      clearTimeout(this.thumbHoverTimer);\n      this.thumbHoverTimer = null;\n    }\n\n    this.thumbLabelsVisible = true;\n  }\n\n  private hideThumbLabels() {\n    if (this.pointerCaptured || !this.thumbLabelsVisible) {\n      return;\n    }\n\n    this.thumbHoverTimer = setTimeout(() => {\n      this.thumbLabelsVisible = false;\n    }, 750);\n  }\n\n  private valueInRange(value: number, min = 0, max = 100) {\n    return Math.max(Math.min(value, max), min);\n  }\n\n  protected valueToFraction(value: number) {\n    return (value - this.min) / (this.max - this.min);\n  }\n\n  private calculateTrackUpdate(mouseX: number): number {\n    if (!this.activeThumb) {\n      return 0;\n    }\n\n    const thumbBoundaries = this.activeThumb.getBoundingClientRect();\n    const thumbCenter = (thumbBoundaries.right - thumbBoundaries.left) / 2;\n    const thumbPositionX = thumbBoundaries.left + thumbCenter;\n\n    const scale = this.getBoundingClientRect().width / (this.max - this.min);\n    const change = isLTR(this)\n      ? mouseX - thumbPositionX\n      : thumbPositionX - mouseX;\n\n    if (this.step) {\n      const stepDistance = scale * this.step;\n      const stepDistanceCenter = stepDistance / 2;\n\n      // If the thumb scale range (slider update) is less than a half step,\n      // the position stays the same.\n      const scaleXPositive = Math.abs(change);\n      if (scaleXPositive < stepDistanceCenter) {\n        return 0;\n      }\n\n      return Math.round(change / stepDistance) * this.step;\n    } else {\n      return change / scale;\n    }\n  }\n\n  private updateSlider(mouseX: number) {\n    if (this.disabled) {\n      return;\n    }\n\n    const increment = this.calculateTrackUpdate(mouseX);\n    if (this.activeThumb && increment !== 0) {\n      this.updateValue(increment);\n    }\n  }\n\n  private pointerDown = (event: PointerEvent) => {\n    const thumb = this.closestHandle(event);\n    thumb.focus();\n\n    this.startValue = this.activeValue;\n    this.updateSlider(event.clientX);\n\n    this.setPointerCapture(event.pointerId);\n    this.pointerCaptured = true;\n    this.showThumbLabels();\n    event.preventDefault();\n    this.activeThumb?.part.remove('focused');\n  };\n\n  private pointerMove = (event: PointerEvent) => {\n    if (this.pointerCaptured) {\n      this.updateSlider(event.clientX);\n    }\n  };\n\n  private lostPointerCapture = () => {\n    this.pointerCaptured = false;\n    this.hideThumbLabels();\n\n    if (this.startValue! !== this.activeValue) {\n      this.emitChangeEvent();\n    }\n    this.startValue = undefined;\n  };\n\n  protected handleThumbPointerEnter = () => {\n    this.showThumbLabels();\n  };\n\n  protected handleThumbPointerLeave = () => {\n    this.hideThumbLabels();\n  };\n\n  protected renderTicks() {\n    const groups = [];\n    for (let i = 0, totalCount = this.totalTickCount(); i < totalCount; i++) {\n      const isPrimary = this.isPrimary(i);\n      groups.push(html`\n        <div part=\"tick-group\">\n          <div part=\"tick\" data-primary=${isPrimary}>\n            ${(isPrimary ? this.hidePrimaryLabels : this.hideSecondaryLabels)\n              ? html``\n              : html`\n                  <div part=\"tick-label\">\n                    <span part=\"tick-label-inner\">\n                      ${this.labels\n                        ? isPrimary\n                          ? this.labels[\n                              Math.round(i / (this.secondaryTicks + 1))\n                            ]\n                          : ''\n                        : this.formatValue(this.tickValue(i))}\n                    </span>\n                  </div>\n                `}\n          </div>\n        </div>\n      `);\n    }\n    return groups;\n  }\n\n  protected renderThumb(value: number, ariaLabel?: string, thumbId?: string) {\n    const percent = `${this.valueToFraction(value) * 100}%`;\n\n    return html`\n      <div\n        part=\"thumb\"\n        id=${ifDefined(thumbId)}\n        tabindex=${this.disabled ? -1 : 0}\n        style=${styleMap({ insetInlineStart: percent })}\n        role=\"slider\"\n        aria-valuemin=${this.actualMin}\n        aria-valuemax=${this.actualMax}\n        aria-valuenow=${value}\n        aria-valuetext=${ifDefined(\n          this.labels\n            ? this.labels[value]\n            : this.valueFormat || this.valueFormatOptions\n              ? this.formatValue(value)\n              : undefined\n        )}\n        aria-label=${ifDefined(ariaLabel)}\n        aria-disabled=${this.disabled ? 'true' : 'false'}\n        @pointerenter=${this.handleThumbPointerEnter}\n        @pointerleave=${this.handleThumbPointerLeave}\n        @focus=${(ev: Event) => (this.activeThumb = ev.target as HTMLElement)}\n        @blur=${() => (\n          this.activeThumb?.part.remove('focused'),\n          (this.activeThumb = undefined)\n        )}\n      ></div>\n      ${this.hideTooltip\n        ? html``\n        : html`\n            <div\n              part=\"thumb-label\"\n              style=${styleMap({\n                opacity: this.thumbLabelsVisible ? '1' : '0',\n                insetInlineStart: percent,\n              })}\n            >\n              <div part=\"thumb-label-inner\">\n                ${this.labels ? this.labels[value] : this.formatValue(value)}\n              </div>\n            </div>\n          `}\n    `;\n  }\n\n  private renderSteps() {\n    if (!this.discreteTrack || !this.step) {\n      return html``;\n    }\n\n    const trackRange = this.max - this.min;\n    const interval = ((100 / (trackRange / this.step)) * 10) / 10;\n\n    return html`\n      <div part=\"steps\">\n        <svg width=\"100%\" height=\"100%\" style=\"display: flex\">\n          <line\n            x1=\"0\"\n            y1=\"1\"\n            x2=\"100%\"\n            y2=\"1\"\n            stroke=\"currentColor\"\n            stroke-dasharray=\"0, calc(${interval * Math.sqrt(2)}%)\"\n            stroke-linecap=\"round\"\n            stroke-width=\"2px\"\n          ></line>\n        </svg>\n      </div>\n    `;\n  }\n\n  protected override render() {\n    return html`\n      <div part=\"base\">\n        ${this.tickOrientation === 'mirror' || this.tickOrientation === 'start'\n          ? html`<div part=\"ticks\">${this.renderTicks()}</div>`\n          : html``}\n        <div part=\"track\">\n          <div part=\"inactive\"></div>\n          <div part=\"fill\" style=${styleMap(this.getTrackStyle())}></div>\n          ${this.renderSteps()}\n        </div>\n        ${this.tickOrientation !== 'start'\n          ? html`<div part=\"ticks\">${this.renderTicks()}</div>`\n          : html``}\n        <div part=\"thumbs\">${this.renderThumbs()}</div>\n        <slot @slotchange=${this.handleSlotChange}></slot>\n      </div>\n    `;\n  }\n}\n"]}